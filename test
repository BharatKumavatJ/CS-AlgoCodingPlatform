



int[] merge(arr, left, right , mid){

    int leftArrSize = mid - low + 1; // 3 - 0 + 1 = 4
    int rightArrSize = right - mid;  // 7 - 3  = 4

    extraArraySize = leftArrSize + rightArrSize;

    int ExtraArr[] = new int[extraArraySize];

    int l = left;
    int r = mid + 1;

    int ptr = 0;

    while(l <= mid && r <= right){
        if(arr[l] < arr[r]){
            ExtraArr[ptr] = arr[l] ;
            l++;
        }else{
            ExtraArr[ptr] = arr[r] 
            r++;
        }
        ptr++;
    }

    while(l <= mid ){
     
            ExtraArr[ptr] = arr[l] ;
            l++;
            ptr++;
    }

    while(r <= right){
       
            ExtraArr[ptr] = arr[r] ;
            r++;
       
        ptr++;
    }
    return ExtraArr;
}
 

devide(arr, left, right){


    if(left < right){

        // devide 

        int mid = (left + right)/2;

        left  = devide(arr, 0, mid);
        right = devide(arr, mid + 1, right);
        
        // merge 
        return merge(arr, left, right, mid)
    }

}